version: '3.8'
 
  
services:
  # cloudera:
  #   image: msellami/cloudera-quickstart:latest
  #   privileged: true
  #   hostname: quickstart.cloudera
  #   container_name: quickstart.cloudera
  #   command: /usr/bin/docker-quickstart
  #   ports:
  #     - "8024:8020"   # HDFS 
  #     - "2222:22"     # SSH
  #     - "7183:7180"   # Cloudera Manager
  #     - "8886:8888"   # Hue
  #     # - "11001:11000" # Oozie
  #     # - "50071:50070" # HDFS Rest Namenode
  #     # - "50076:50075" # HDFS Rest Datanode
  #     # - "2182:2181"   # Zookeeper
  #     # - "8087:8088"   # YARN Resource Manager
  #     # - "19889:19888" # MapReduce Job History
  #     # - "50031:50030" # MapReduce Job Tracker
  #     # - "8984:8983"   # Solr
  #     # - "16001:16000" # Sqoop Metastore
  #     # - "8042:8042"   # YARN Node Manager
  #     - "60011:60010" # HBase Master
  #     - "60031:60030" # HBase Region
  #     - "9092:9090"   # HBase Thrift
  #     - "8085:8080"   # HBase Rest
  #     # - "7077:7077"   # Spark Master
  #     # - "3306:3306"   # MYSQL 
  #     # - "10001:10000" # HiveServer
  #     # - "21051:21050" # Impala
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '2'  # Limit the container to use 2 CPU cores
  #         memory: '4G'  # Limit the container to use 4GB of memory
  #   tty: true
  #   stdin_open: true
  #   volumes: 
  #     - /var/shared_cloudera_quickstart:/media/shared_from_local

  weather_api:
    build:
      context: ./api
      dockerfile: dockerfile
    container_name: weather_api
    hostname: weather_api
    # depends_on:
    #   - cloudera
    # volumes:
    #   - ./api/app.py:/app/app.py 
    #   - ./api/routes.py:/app/routes.py
    networks:
      - my_network 
    environment:
      - HBASE_URI=HBASE://HBASE:9090
    ports:
      - "8082:8082"
    #command: bash -c "while true; do python app.py; sleep 180; done"
  weather_etl:
    build:
      context: ./crawler
      dockerfile: dockerfile
    container_name: weather_etl
    hostname: weather_etl
    #depends_on:
    #  - cloudera
    # volumes:
    #   - ./api/app.py:/app/app.py 
    #   - ./api/routes.py:/app/routes.py
    networks:
      - my_network 
    environment:
      - HBASE_URI=HBASE://HBASE:10000/
    ports:
      - "8081:8081"

  dashboard:
    build:
      context: ./dashboard
      dockerfile: dockerfile
    container_name: dashboard
    depends_on:
      # - cloudera
      - weather_api
    # volumes:
    #   - ./dashboard/dashboard.py:/app/dashboard.py 
    networks:
      - my_network 
    ports:
      - "8500:8500"
    command: streamlit run dashboard.py --server.port 8500
  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
        # Enable you to access potainers web interface from your host machine
        # using https://localhost:9443
    ports:
      - "8000:8000"
      - "9443:9443"
volumes:
  mongodb_data:


networks:
  my_network:

